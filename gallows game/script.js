let words = ["сторона", "просто", "нога", "вдруг", "над", "никто", "дверь", "перед", "работа", "три", "ваш", "уж", "земля", "конец", "несколько", "час", "голос", "город", "пока", "хорошо", "вода", "более", "хотя", "всегда", "куда", "стол", "ребенок", "сила", "отец", "женщина", "машина", "случай", "ночь", "сразу", "мир", "совсем", "вид", "почти", "ряд", "начало", "вопрос", "много", "снова", "между", "деньги", "лишь", "минута", "жена", "правда", "страна", "свет", "будто", "никогда", "товарищ", "дорога", "однако", "именно", "окно", "найти", "комната", "москва", "вообще", "книга", "улица", "душа", "утро", "сколько", "вечер", "пол", "таки", "народ", "плечо", "сегодня", "бог", "вместе", "взгляд", "зачем", "палец", "россия", "история", "наконец", "мысль", "назад", "словно", "уйти", "давно", "сын", "нельзя", "прямо", "долго", "быстро", "лес", "пора", "оно", "имя", "разговор", "тело", "стена", "право", "старик", "мама", "поэтому", "совершенно", "кроме", "тысяча", "месяц", "спина", "язык", "точно", "среди", "сердце", "вести", "иногда", "мальчик", "небо", "девушка", "образ", "вокруг", "письмо", "воздух", "брат", "отношение", "затем", "система", "четыре", "квартира", "также", "любовь", "солдат", "откуда", "чтоб", "хозяин", "вроде", "особенно", "начальник", "оба", "школа", "парень", "кровь", "солнце", "неделя", "ребята", "например", "шаг", "мужчина", "равно", "нос", "мало", "внимание", "капитан", "ухо", "туда", "сюда", "действительно", "слишком", "чувство", "берег", "семья", "генерал", "момент", "труд", "группа", "немного", "впрочем", "видно", "муж", "разве", "движение", "порядок", "ответ", "тихо", "газета", "помощь", "собака", "дерево", "снег", "сон", "смысл", "смочь", "против", "двор", "форма", "общество", "грудь", "угол", "ладно", "век", "карман", "немец", "наверное", "губа", "дядя", "часто", "огонь", "писатель", "армия", "состояние", "зуб", "очередь", "камень", "ветер", "сначала", "либо", "рота", "закон", "море", "гора", "врач", "край", "река", "мера", "вполне", "вперед", "медленно", "возле", "никак", "действие", "довольно", "вещь", "ход", "боль", "судьба", "причина", "едва", "черта", "девочка", "волос", "номер", "далеко", "плохо", "глава", "командир", "обычно", "партия", "проблема", "страх", "ясно", "бумага", "пара", "государство", "деревня", "речь", "средство", "положение", "связь", "скоро", "завтра", "произнести", "однажды", "мимо", "иначе", "класс", "цель", "сквозь", "профессор", "господин", "дух", "план", "зал", "директор", "сей", "результат", "кстати", "след", "бутылка", "трудно", "условие", "прежде", "ум", "процесс", "картина", "вместо", "легко", "центр", "возможно", "около", "сто", "будущее", "число", "всякое", "рубль", "принести", "вера", "вовсе", "удар", "телефон", "колено", "мало", "коридор", "мужик", "автор", "многие", "встреча", "кабинет", "документ", "самолет", "вниз", "игра", "рассказ", "хлеб", "развитие", "менее", "трубка", "враг", "двое", "доктор", "ладонь", "наука", "лейтенант", "служба", "привести", "сорок", "счет", "кухня", "решение", "молодая", "роман", "компания", "течение", "столько", "метр", "институт", "интерес", "половина", "качество", "шея", "вон", "идея", "видимо", "достаточно", "провести", "трава", "дед", "сознание", "родитель", "чай", "род", "звук", "магазин", "президент", "поэт", "спасибо", "болезнь", "событие", "помочь", "кожа", "лист", "слеза", "надежда", "молча", "сильно", "литература", "оружие", "запах", "неожиданно", "вчера", "роль", "рост", "природа", "точка", "звезда", "фамилия", "характер", "пожалуйста", "выше", "офицер", "толпа", "придтись", "уровень", "кресло", "баба", "секунда", "банк", "опыт", "поскольку", "сапог", "правило", "стекло", "дочь", "член", "десяток", "цветок", "желание", "дождь", "впереди", "много", "лоб", "улыбка", "борьба", "ворот", "ящик", "этаж", "вновь", "нечего", "революция", "впервые", "сосед", "сестра", "чей", "ситуация", "количество", "выход", "совет", "дурак", "союз", "лето", "граница", "цвет", "интересно", "свобода", "зато", "стул", "поезд", "музыка", "тень", "лошадь", "поле", "тип", "суд", "площадь", "возраст", "орган", "карта", "король", "слава", "полковник", "бок", "цена", "информация", "мозг", "удовольствие", "воля", "крыша", "нести", "обратно", "дама", "семь", "сад", "правительство", "мол", "название", "пример", "невозможно", "зеркало", "дым", "весьма", "факт", "рыба", "бабушка", "вино", "ибо", "учитель", "осторожно", "круг", "папа", "правильно", "недавно", "причем", "повод", "лагерь", "птица", "корабль", "мнение", "зима", "километр", "прочее", "лестница", "неужели", "обязательно", "вверх", "детство", "остров", "столь", "водка", "темнота", "станция", "гражданин", "странно", "вскоре", "команда", "заболевание", "живот", "ради", "тишина", "понятно", "фронт", "щека", "страшно", "район", "наверно", "выражение", "слегка", "мешок", "большинство", "управление", "приказ", "куст", "художник", "знак", "завод", "кулак", "стакан", "отсюда", "рот", "пора", "лечение", "сутки", "операция", "пространство", "одежда", "кусок", "тема", "искусство", "курс", "чудо", "ощущение", "здание", "милиция", "несмотря", "оттуда", "волна", "задача", "старуха", "срок", "ужас", "материал", "крик", "знание", "трое", "шум", "автомат", "резко", "тетя", "впечатление", "пауза", "глубина", "доллар", "сотня", "студент", "очко", "нож", "предмет", "майор", "инженер", "программа", "костюм", "театр", "хвост", "танк", "явно", "журнал", "конь", "вдоль", "стихи", "степень", "фигура", "ключ", "черт", "вагон", "культура", "боец", "фильм", "восемь", "зайти", "немедленно", "верно", "пыль"]

const word = document.querySelector(".word"),
    letters = document.querySelectorAll(".letter"),
    hangman = document.querySelectorAll(".hangman"),
    heart = document.querySelector(".count-hp"),
    containerGallow = document.querySelector(".container-gallow")
let countMisstakes,
    countHP,
    unknownLetters,
    randomWord,
    countLetters,
    pointsWin

function startGame() {
    word.innerHTML = ""
    countMisstakes = 0
    containerGallow.removeEventListener("click", restartGame)
    letters.forEach(el => el.style.color = "#71D4FE")
    createRandomWord()
    letters.forEach(el => el.addEventListener("click", inputLetters))
}

function createRandomWord() {
    countHP = 10
    heart.innerHTML = countHP
    let randomNum = Math.floor(Math.random() * words.length)
    randomWord = words[randomNum]
    countLetters = randomWord.length
    for (let i = 0; i < countLetters; i++) {
        let spanLetter = document.createElement("span")
        spanLetter.classList.add("letter-unknown-word")
        word.append(spanLetter)
        spanLetter.innerHTML = randomWord[i]
    }
    unknownLetters = document.querySelectorAll(".letter-unknown-word")
    pointsWin = randomWord.length
    console.log(randomWord)
}

let tempPointWin = 0

function inputLetters() {
    this.removeEventListener("click", inputLetters)
    if (countHP > 0) {
        var indices = [];
        let randomWordSplit = randomWord.split("")
        var element = this.innerHTML.toLowerCase();
        var idx = randomWordSplit.indexOf(element);
        if (randomWordSplit.indexOf(element) != -1) {
            while (idx != -1) {
                indices.push(idx);
                idx = randomWordSplit.indexOf(element, idx + 1);
                tempPointWin++
            }
        }
        if (indices.length != 0) {
            this.style.color = "#38bb22"
            for (let i = 0; i < indices.length; i++) {
                unknownLetters[indices[i]].classList.add("visibility-letter")
            }
        } else {
            this.style.textShadow = "0px 0px 40px #ff0000, 0px 0px 80px #ff0000;"
            this.style.color = "#e54949"
            hangman[countMisstakes].classList.add(`hangman-error-${countMisstakes + 1}`)
            --countHP
            heart.innerHTML = countHP
            if (countHP == 0) {
                heart.innerHTML = ""
                hangman[countMisstakes - 1].classList.add(`hangman-error-${countMisstakes}`)
                countMisstakes++
                endGame()
                containerGallow.addEventListener("click", restartGame)
            }
            countMisstakes++
        }
        if (pointsWin == tempPointWin) {
            unknownLetters.forEach(el => el.style.color = "#67c539")
            containerGallow.addEventListener("click", restartGame)
        }
    }
}

function win() {
    countMisstakes = 10
    inputLetters()
}

function endGame() {
    unknownLetters.forEach(el => el.classList.add("end-red"))
}

function restartGame() {
    tempPointWin = 0
    countMisstakes = 0
    for (let i = 0; i < hangman.length; i++) {
        const el = hangman[i];
        if (el.classList.contains(`hangman-error-${i + 1}`)) {
            el.classList.remove(`hangman-error-${i + 1}`)
        }
    }
    if (hangman[9].classList.contains(`hangman-error-${9}`)) {
        hangman[9].classList.remove(`hangman-error-${9}`)
    }
    startGame()
}

startGame()